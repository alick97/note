import Immutable from "immutable";
import File from "./file";
import GlossaryEntry from "./glossaryEntry";
declare const Glossary_base: Immutable.Record.Class;
declare class Glossary extends Glossary_base {
    getFile(): any;
    getEntries(): any;
    /**
     Return an entry by its name
     @param {string} name
     @return {GlossaryEntry}
     */
    getEntry(name: string): any;
    /**
     Render glossary as text

     @return {Promise<String>}
     */
    toText(parser: any): any;
    /**
     Add/Replace an entry to a glossary

     @param {Glossary} glossary
     @param {GlossaryEntry} entry
     @return {Glossary}
     */
    static addEntry(glossary: Glossary, entry: GlossaryEntry): Glossary;
    /**
     Add/Replace an entry to a glossary by name/description
     */
    static addEntryByName(glossary: Glossary, name: string, description: string): Glossary;
    /**
     Create a glossary from a list of entries

     @param file
     @param {Array|List} entries
     @return {Glossary}
     */
    static createFromEntries(file: File, entries: any[]): Glossary;
}
export default Glossary;
//# sourceMappingURL=glossary.d.ts.map